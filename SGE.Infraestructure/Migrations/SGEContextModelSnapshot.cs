// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SGE.Infraestructure.Data;

namespace SGE.Infraestructure.Migrations
{
    [DbContext(typeof(SGEContext))]
    partial class SGEContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Endereco", b =>
                {
                    b.Property<int>("EnderecoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("CEP")
                        .HasColumnType("varchar(9)");

                    b.Property<string>("Logradouro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .HasColumnType("varchar(4)");

                    b.Property<int>("ParticipanteId");

                    b.HasKey("EnderecoId");

                    b.HasIndex("ParticipanteId")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Evento", b =>
                {
                    b.Property<int>("EventoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("InscricaoId");

                    b.HasKey("EventoId");

                    b.HasIndex("InscricaoId");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.GrupoTematico", b =>
                {
                    b.Property<int>("GrupoTematicoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.HasKey("GrupoTematicoId");

                    b.ToTable("GruposTematicos");
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Inscricao", b =>
                {
                    b.Property<int>("InscricaoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro");

                    b.Property<int?>("ParticipanteId");

                    b.Property<double>("Valor");

                    b.HasKey("InscricaoId");

                    b.HasIndex("ParticipanteId");

                    b.ToTable("Inscricaos");
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.InscricaoGrupoTematico", b =>
                {
                    b.Property<int>("InscricaoGrupoTematicoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GrupoTematicoId");

                    b.Property<int>("InscricaoId");

                    b.HasKey("InscricaoGrupoTematicoId");

                    b.HasIndex("GrupoTematicoId");

                    b.HasIndex("InscricaoId");

                    b.ToTable("InscricaoGrupoTematicos");
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Participante", b =>
                {
                    b.Property<int>("ParticipanteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(30)");

                    b.HasKey("ParticipanteId");

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Endereco", b =>
                {
                    b.HasOne("SGE.ApplicationCore.Entity.Participante", "Participante")
                        .WithOne("Endereco")
                        .HasForeignKey("SGE.ApplicationCore.Entity.Endereco", "ParticipanteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Evento", b =>
                {
                    b.HasOne("SGE.ApplicationCore.Entity.Inscricao", "Inscricao")
                        .WithMany("Eventos")
                        .HasForeignKey("InscricaoId");
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.Inscricao", b =>
                {
                    b.HasOne("SGE.ApplicationCore.Entity.Participante", "Participante")
                        .WithMany("Inscricao")
                        .HasForeignKey("ParticipanteId");
                });

            modelBuilder.Entity("SGE.ApplicationCore.Entity.InscricaoGrupoTematico", b =>
                {
                    b.HasOne("SGE.ApplicationCore.Entity.GrupoTematico", "GrupoTematico")
                        .WithMany("InscricaoGrupoTematicos")
                        .HasForeignKey("GrupoTematicoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SGE.ApplicationCore.Entity.Inscricao", "Inscricao")
                        .WithMany("InscricaoGrupoTematicos")
                        .HasForeignKey("InscricaoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
